{"version":3,"file":"index.mjs","sources":["../node_modules/tslib/tslib.es6.js","../src/commons/urls.ts","../src/commons/utils.ts","../src/core/downloaders/storage-downloader.ts","../src/commons/cid.ts","../src/core/uploaders/ipfs-uploader.ts","../src/core/storage.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import type { GatewayUrls } from \"../types/download\";\n\n/**\n * @internal\n */\nexport const DEFAULT_GATEWAY_URLS: GatewayUrls = {\n  // Note: Gateway URLs should have trailing slashes (we clean this on user input)\n  \"ipfs://\": [\n    \"https://ipfs-2.thirdwebcdn.com/ipfs/\",\n    \"https://ipfs-3.thirdwebcdn.com/ipfs/\",\n    \"https://ipfs-4.thirdwebcdn.com/ipfs/\",\n    \"https://ipfs-5.thirdwebcdn.com/ipfs/\",\n    \"https://cloudflare-ipfs.com/ipfs/\",\n    \"https://ipfs.io/ipfs/\",\n    // TODO this one can become the default again once it's stable (no more VT issues)\n    \"https://ipfs.thirdwebcdn.com/ipfs/\",\n  ],\n};\n\n/**\n * @internal\n */\nexport const TW_IPFS_SERVER_URL = \"https://upload.nftlabs.co\";\n\n/**\n * @internal\n */\nexport const PINATA_IPFS_URL = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n\n/**\n * @internal\n */\nexport function parseGatewayUrls(\n  gatewayUrls?: GatewayUrls | string[],\n): GatewayUrls {\n  if (Array.isArray(gatewayUrls)) {\n    return {\n      \"ipfs://\": gatewayUrls,\n    };\n  }\n\n  return gatewayUrls || {};\n}\n\n/**\n * @internal\n */\nexport function prepareGatewayUrls(gatewayUrls?: GatewayUrls): GatewayUrls {\n  const allGatewayUrls = {\n    ...gatewayUrls,\n    ...DEFAULT_GATEWAY_URLS,\n  };\n\n  for (const key of Object.keys(DEFAULT_GATEWAY_URLS)) {\n    if (gatewayUrls && gatewayUrls[key]) {\n      // Make sure that all user gateway URLs have trailing slashes\n      const cleanedGatewayUrls = gatewayUrls[key].map(\n        (url) => url.replace(/\\/$/, \"\") + \"/\",\n      );\n      allGatewayUrls[key] = [\n        ...cleanedGatewayUrls,\n        ...DEFAULT_GATEWAY_URLS[key],\n      ];\n    }\n  }\n\n  return allGatewayUrls;\n}\n","import type { BufferOrStringWithName, FileOrBuffer } from '../types/data'\nimport type { GatewayUrls } from '../types/download'\n\nlet Buffer: BufferConstructor = globalThis.Buffer;\nexport const getBuffer = (() => {\n  return async () => {\n    if (Buffer) return Buffer\n    Buffer = (await import('node:buffer')).Buffer\n    return Buffer\n  }\n})();\ngetBuffer()\n\n/**\n * @internal\n */\nexport function isBrowser() {\n  return typeof globalThis.window !== \"undefined\";\n}\n\n/**\n * @internal\n */\nexport function isFileInstance(data: any): data is File {\n  return globalThis.File && data instanceof File;\n}\n\n/**\n * @internal\n */\nexport function isBufferInstance(data: any): data is Buffer {\n  return Buffer && data instanceof Buffer;\n}\n\n/**\n * @internal\n */\nexport function isBufferOrStringWithName(\n  data: any,\n): data is BufferOrStringWithName {\n  return !!(\n    data &&\n    data.name &&\n    data.data &&\n    typeof data.name === \"string\" &&\n    (typeof data.data === \"string\" || isBufferInstance(data.data))\n  );\n}\n\nexport function isFileOrBuffer(\n  data: any,\n): data is File | Buffer | BufferOrStringWithName {\n  return (\n    isFileInstance(data) ||\n    isBufferInstance(data) ||\n    isBufferOrStringWithName(data)\n  );\n}\n\n/**\n * @internal\n */\nexport function isFileBufferOrStringEqual(input1: any, input2: any): boolean {\n  if (isFileInstance(input1) && isFileInstance(input2)) {\n    // if both are File types, compare the name, size, and last modified date (best guess that these are the same files)\n    if (\n      input1.name === input2.name &&\n      input1.lastModified === input2.lastModified &&\n      input1.size === input2.size\n    ) {\n      return true;\n    }\n  } else if (isBufferInstance(input1) && isBufferInstance(input2)) {\n    // buffer gives us an easy way to compare the contents!\n\n    return input1.equals(input2);\n  } else if (\n    isBufferOrStringWithName(input1) &&\n    isBufferOrStringWithName(input2)\n  ) {\n    // first check the names\n    if (input1.name === input2.name) {\n      // if the data for both is a string, compare the strings\n      if (typeof input1.data === \"string\" && typeof input2.data === \"string\") {\n        return input1.data === input2.data;\n      } else if (\n        isBufferInstance(input1.data) &&\n        isBufferInstance(input2.data)\n      ) {\n        // otherwise we know it's buffers, so compare the buffers\n        return input1.data.equals(input2.data);\n      }\n    }\n  }\n  // otherwise if we have not found a match, return false\n  return false;\n}\n\n/**\n * @internal\n */\nexport function replaceGatewayUrlWithScheme(\n  uri: string,\n  gatewayUrls: GatewayUrls,\n): string {\n  for (const scheme of Object.keys(gatewayUrls)) {\n    for (const url of gatewayUrls[scheme]) {\n      if (uri.startsWith(url)) {\n        return uri.replace(url, scheme);\n      }\n    }\n  }\n\n  return uri;\n}\n\n/**\n * @internal\n */\nexport function replaceSchemeWithGatewayUrl(\n  uri: string,\n  gatewayUrls: GatewayUrls,\n  index = 0,\n): string | undefined {\n  const scheme = Object.keys(gatewayUrls).find((s) => uri.startsWith(s));\n  const schemeGatewayUrls = scheme ? gatewayUrls[scheme] : [];\n\n  if ((!scheme && index > 0) || (scheme && index >= schemeGatewayUrls.length)) {\n    return undefined;\n  }\n\n  if (!scheme) {\n    return uri;\n  }\n\n  return uri.replace(scheme, schemeGatewayUrls[index]);\n}\n\n/**\n * @internal\n */\nexport function replaceObjectGatewayUrlsWithSchemes<TData = unknown>(\n  data: TData,\n  gatewayUrls: GatewayUrls,\n): TData {\n  if (typeof data === \"string\") {\n    return replaceGatewayUrlWithScheme(data, gatewayUrls) as any as TData;\n  }\n  if (typeof data === \"object\") {\n    if (!data) {\n      return data;\n    }\n\n    if (isFileOrBuffer(data)) {\n      return data;\n    }\n\n    if (Array.isArray(data)) {\n      return data.map((entry) =>\n        replaceObjectGatewayUrlsWithSchemes(entry, gatewayUrls),\n      ) as any as TData;\n    }\n\n    return Object.fromEntries(\n      Object.entries(data).map(([key, value]) => [\n        key,\n        replaceObjectGatewayUrlsWithSchemes(value, gatewayUrls),\n      ]),\n    ) as any as TData;\n  }\n\n  return data;\n}\n\n/**\n * @internal\n */\nexport function replaceObjectSchemesWithGatewayUrls<TData = unknown>(\n  data: TData,\n  gatewayUrls: GatewayUrls,\n): TData {\n  if (typeof data === \"string\") {\n    return replaceSchemeWithGatewayUrl(data, gatewayUrls) as any as TData;\n  }\n  if (typeof data === \"object\") {\n    if (!data) {\n      return data;\n    }\n    if (isFileOrBuffer(data)) {\n      return data;\n    }\n    if (Array.isArray(data)) {\n      return data.map((entry) =>\n        replaceObjectSchemesWithGatewayUrls(entry, gatewayUrls),\n      ) as any as TData;\n    }\n    return Object.fromEntries(\n      Object.entries(data).map(([key, value]) => [\n        key,\n        replaceObjectSchemesWithGatewayUrls(value, gatewayUrls),\n      ]),\n    ) as any as TData;\n  }\n\n  return data;\n}\n\n/**\n * @internal\n */\nexport function extractObjectFiles(\n  data: unknown,\n  files: FileOrBuffer[] = [],\n): FileOrBuffer[] {\n  // If item is a FileOrBuffer add it to our list of files\n  if (isFileOrBuffer(data)) {\n    files.push(data);\n    return files;\n  }\n\n  if (typeof data === \"object\") {\n    if (!data) {\n      return files;\n    }\n\n    if (Array.isArray(data)) {\n      data.forEach((entry) => extractObjectFiles(entry, files));\n    } else {\n      Object.keys(data).map((key) =>\n        extractObjectFiles(data[key as keyof typeof data], files),\n      );\n    }\n  }\n\n  return files;\n}\n\n/**\n * @internal\n */\nexport function replaceObjectFilesWithUris(\n  data: unknown,\n  uris: string[],\n): unknown {\n  if (isFileOrBuffer(data)) {\n    if (uris.length) {\n      data = uris.shift() as string;\n      return data;\n    } else {\n      console.warn(\"Not enough URIs to replace all files in object.\");\n    }\n  }\n\n  if (typeof data === \"object\") {\n    if (!data) {\n      return data;\n    }\n\n    if (Array.isArray(data)) {\n      return data.map((entry) => replaceObjectFilesWithUris(entry, uris));\n    } else {\n      return Object.fromEntries(\n        Object.entries(data).map(([key, value]) => [\n          key,\n          replaceObjectFilesWithUris(value, uris),\n        ]),\n      );\n    }\n  }\n\n  return data;\n}\n","import type { GatewayUrls, IStorageDownloader } from \"../../types/download\";\nimport { replaceSchemeWithGatewayUrl } from \"../../commons/utils\";\n\n/**\n * Default downloader used - handles downloading from all schemes specified in the gateway URLs configuration.\n *\n * @example\n * ```jsx\n * // Can instantiate the downloader with the default gateway URLs\n * const downloader = new StorageDownloader();\n * const storage = new ThirdwebStorage({ downloader });\n * ```\n *\n * @public\n */\nexport class StorageDownloader implements IStorageDownloader {\n  async download(\n    uri: string,\n    gatewayUrls: GatewayUrls,\n    attempts = 0,\n  ): Promise<Response> {\n    if (attempts > 3) {\n      throw new Error(\n        \"[FAILED_TO_DOWNLOAD_ERROR] Failed to download from URI - too many attempts failed.\",\n      );\n    }\n\n    // Replace recognized scheme with the highest priority gateway URL that hasn't already been attempted\n    const resolvedUri = replaceSchemeWithGatewayUrl(uri, gatewayUrls, attempts);\n    // If every gateway URL we know about for the designated scheme has been tried (via recursion) and failed, throw an error\n    if (!resolvedUri) {\n      throw new Error(\n        \"[FAILED_TO_DOWNLOAD_ERROR] Unable to download from URI - all gateway URLs failed to respond.\",\n      );\n    }\n\n    const res = await fetch(resolvedUri);\n\n    // If request to the current gateway fails, recursively try the next one we know about\n    if (res.status >= 500 || res.status === 403 || res.status === 408) {\n      console.warn(\n        `Request to ${resolvedUri} failed with status ${res.status} - ${res.statusText}`,\n      );\n      return this.download(uri, gatewayUrls, attempts + 1);\n    }\n\n    return res;\n  }\n}\n","import type { FileOrBufferOrString } from \"../types/data\";\nimport { DEFAULT_GATEWAY_URLS } from \"./urls\";\nimport { getBuffer, isBufferOrStringWithName } from \"./utils\";\nimport { importer } from \"ipfs-unixfs-importer\";\n\ntype CIDVersion = 0 | 1;\ntype ContentWithPath = {\n  path?: string;\n  content: Uint8Array;\n};\n\nexport async function getCIDForUpload(\n  data: FileOrBufferOrString[],\n  fileNames: string[],\n  wrapWithDirectory = true,\n  cidVersion: CIDVersion = 0,\n) {\n  const CBuffer = globalThis.Buffer || await getBuffer()\n  const contentWithPath: ContentWithPath[] = await Promise.all(\n    data.map(async (file, i) => {\n      const path = fileNames[i];\n\n      let content: Uint8Array;\n      if (typeof file === \"string\") {\n        content = new TextEncoder().encode(file);\n      } else if (isBufferOrStringWithName(file)) {\n        if (typeof file.data === \"string\") {\n          content = new TextEncoder().encode(file.data);\n        } else {\n          content = file.data as Uint8Array;\n        }\n      } else if (CBuffer.isBuffer(file)) {\n        content = file as Uint8Array;\n      } else {\n        const buffer = await file.arrayBuffer();\n        content = new Uint8Array(buffer);\n      }\n\n      return { path, content };\n    }),\n  );\n\n  return getCID(contentWithPath, wrapWithDirectory, cidVersion);\n}\n\nexport async function getCID(\n  content: ContentWithPath[],\n  wrapWithDirectory = true,\n  cidVersion: CIDVersion = 0,\n) {\n  const options = { onlyHash: true, wrapWithDirectory, cidVersion };\n\n  const dummyBlockstore = {\n    put: async () => {},\n  };\n\n  let lastCid;\n  for await (const { cid } of importer(\n    content as any,\n    dummyBlockstore as any,\n    options,\n  )) {\n    lastCid = cid;\n  }\n\n  return `${lastCid}`;\n}\n\nexport async function isUploaded(cid: string) {\n  const res = await fetch(`${DEFAULT_GATEWAY_URLS[\"ipfs://\"][0]}${cid}`, {\n    method: \"HEAD\",\n    headers: {\n      // tell the gateway to skip fetching from origin in order to fail fast on 404s and just re-upload in those cases\n      \"x-skip-origin\": \"true\",\n    },\n  });\n  return res.ok;\n}\n","import type { IStorageUploader, IpfsUploadBatchOptions, IpfsUploaderOptions } from \"../../types/upload\";\nimport type { FileOrBufferOrString } from \"../../types/data\";\nimport { getCIDForUpload, isUploaded } from \"../../commons/cid\";\nimport { PINATA_IPFS_URL, TW_IPFS_SERVER_URL } from \"../../commons/urls\";\nimport { isBufferOrStringWithName, isFileBufferOrStringEqual, isFileInstance } from \"../../commons/utils\";\n\n/**\n * Default uploader used - handles uploading arbitrary data to IPFS\n *\n * @example\n * ```jsx\n * // Can instantiate the uploader with default configuration\n * const uploader = new StorageUploader();\n * const storage = new ThirdwebStorage({ uploader });\n *\n * // Or optionally, can pass configuration\n * const options = {\n *   // Upload objects with resolvable URLs\n *   uploadWithGatewayUrl: true,\n * }\n * const uploader = new StorageUploader(options);\n * const storage = new ThirdwebStorage({ uploader });\n * ```\n *\n * @public\n */\nexport class IpfsUploader implements IStorageUploader<IpfsUploadBatchOptions> {\n  public uploadWithGatewayUrl: boolean;\n\n  constructor(options?: IpfsUploaderOptions) {\n    this.uploadWithGatewayUrl = options?.uploadWithGatewayUrl || false;\n  }\n\n  async uploadBatch(\n    data: FileOrBufferOrString[],\n    options?: IpfsUploadBatchOptions,\n  ): Promise<string[]> {\n    if (options?.uploadWithoutDirectory && data.length > 1) {\n      throw new Error(\n        \"[UPLOAD_WITHOUT_DIRECTORY_ERROR] Cannot upload more than one file or object without directory!\",\n      );\n    }\n\n    const formData = new FormData();\n    const { form, fileNames } = await this.buildFormData(formData, data, options)\n\n    try {\n      const cid = await getCIDForUpload(\n        data,\n        fileNames.map((name) => decodeURIComponent(name)),\n        !options?.uploadWithoutDirectory,\n      );\n      if ((await isUploaded(cid)) && !options?.alwaysUpload) {\n        if (options?.onProgress) {\n          options?.onProgress({\n            progress: 100,\n            total: 100,\n          });\n        }\n\n        if (options?.uploadWithoutDirectory) {\n          return [`ipfs://${cid}`];\n        } else {\n          return fileNames.map((name) => `ipfs://${cid}/${name}`);\n        }\n      }\n    } catch {\n      // no-op\n    }\n\n    return this.doUploadBatch(form, fileNames, options)\n  }\n\n  /**\n   * Fetches a one-time-use upload token that can used to upload\n   * a file to storage.\n   *\n   * @returns - The one time use token that can be passed to the Pinata API.\n   */\n  private async getUploadToken(): Promise<string> {\n    const res = await fetch(`${TW_IPFS_SERVER_URL}/grant`, {\n      method: \"GET\",\n      headers: {\n        \"X-APP-NAME\": \"Storage SDK\",\n      },\n    });\n    if (!res.ok) {\n      throw new Error(`Failed to get upload token`);\n    }\n    const body = await res.text();\n    return body;\n  }\n\n  private async buildFormData(\n    form: FormData,\n    files: FileOrBufferOrString[],\n    options?: IpfsUploadBatchOptions,\n  ) {\n    const fileNameToFileMap = new Map<string, FileOrBufferOrString>();\n    const fileNames: string[] = [];\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      let fileName = \"\";\n\n      if (isFileInstance(file)) {\n        if (options?.rewriteFileNames) {\n          let extensions = \"\";\n          if (file.name) {\n            const extensionStartIndex = file.name.lastIndexOf(\".\");\n            if (extensionStartIndex > -1) {\n              extensions = file.name.substring(extensionStartIndex);\n            }\n          }\n          fileName = `${\n            i + options.rewriteFileNames.fileStartNumber\n          }${extensions}`;\n        } else {\n          fileName = `${file.name}`;\n        }\n      } else if (isBufferOrStringWithName(file)) {\n        if (options?.rewriteFileNames) {\n          fileName = `${i + options.rewriteFileNames.fileStartNumber}`;\n        } else {\n          fileName = `${file.name}`;\n        }\n      } else {\n        if (options?.rewriteFileNames) {\n          fileName = `${i + options.rewriteFileNames.fileStartNumber}`;\n        } else {\n          fileName = `${i}`;\n        }\n      }\n\n      // If we don't want to wrap with directory, adjust the filepath\n      const filepath = options?.uploadWithoutDirectory\n        ? `files`\n        : `files/${fileName}`;\n\n      if (fileNameToFileMap.has(fileName)) {\n        // if the file in the map is the same as the file we are already looking at then just skip and continue\n        if (isFileBufferOrStringEqual(fileNameToFileMap.get(fileName), file)) {\n          // we add it to the filenames array so that we can return the correct number of urls,\n          fileNames.push(fileName);\n          // but then we skip because we don't need to upload it multiple times\n          continue;\n        }\n        // otherwise if file names are the same but they are not the same file then we should throw an error (trying to upload to differnt files but with the same names)\n        throw new Error(\n          `[DUPLICATE_FILE_NAME_ERROR] File name ${fileName} was passed for more than one different file.`,\n        );\n      }\n\n      // add it to the map so that we can check for duplicates\n      fileNameToFileMap.set(fileName, file)\n      fileNames.push(fileName)\n      form.append(\"file\", file as any, filepath)\n    }\n\n    const metadata = {\n      name: `Storage SDK`,\n      keyvalues: { ...options?.metadata },\n    };\n    form.append(\"pinataMetadata\", JSON.stringify(metadata));\n\n    if (options?.uploadWithoutDirectory) {\n      form.append(\n        \"pinataOptions\",\n        JSON.stringify({\n          wrapWithDirectory: false,\n        }),\n      );\n    }\n\n    return {\n      form,\n      // encode the file names on the way out (which is what the upload backend expects)\n      fileNames: fileNames.map((fName) => encodeURIComponent(fName)),\n    };\n  }\n\n  private async doUploadBatch(\n    form: FormData,\n    fileNames: string[],\n    options?: IpfsUploadBatchOptions,\n  ) {\n    const token = await this.getUploadToken();\n\n    if (options?.onProgress) {\n      console.warn(\"The onProgress option is only supported in the browser\");\n    }\n    const res = await fetch(PINATA_IPFS_URL, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: form,\n    });\n    const body = await res.json();\n    if (!res.ok) {\n      console.warn(body);\n      throw new Error(\"Failed to upload files to IPFS\");\n    }\n\n    const cid = body.IpfsHash;\n    if (!cid) {\n      throw new Error(\"Failed to upload files to IPFS\");\n    }\n\n    if (options?.uploadWithoutDirectory) {\n      return [`ipfs://${cid}`];\n    } else {\n      return fileNames.map((name) => `ipfs://${cid}/${name}`);\n    }\n  }\n}\n","import { parseGatewayUrls, prepareGatewayUrls } from \"../commons/urls\";\nimport {\n  extractObjectFiles,\n  isFileOrBuffer,\n  replaceObjectFilesWithUris,\n  replaceObjectGatewayUrlsWithSchemes,\n  replaceObjectSchemesWithGatewayUrls,\n  replaceSchemeWithGatewayUrl,\n} from \"../commons/utils\";\nimport type { FileOrBufferOrString } from \"../types/data\";\nimport type { GatewayUrls, IStorageDownloader } from \"../types/download\";\nimport type { ThirdwebStorageOptions } from \"../types/storage\";\nimport type  { IStorageUploader, IpfsUploadBatchOptions, UploadOptions } from \"../types/upload\";\nimport { StorageDownloader } from \"./downloaders/storage-downloader\";\nimport { IpfsUploader } from \"./uploaders/ipfs-uploader\";\n\n/**\n * Upload and download files from decentralized storage systems.\n *\n * @example\n * ```jsx\n * // Create a default storage class without any configuration\n * const storage = new ThirdwebStorage();\n *\n * // Upload any file or JSON object\n * const uri = await storage.upload(data);\n * const result = await storage.download(uri);\n *\n * // Or configure a custom uploader, downloader, and gateway URLs\n * const gatewayUrls = {\n *   // We define a mapping of schemes to gateway URLs\n *   \"ipfs://\": [\n *     \"https://ipfs.thirdwebcdn.com/ipfs/\",\n *     \"https://cloudflare-ipfs.com/ipfs/\",\n *     \"https://ipfs.io/ipfs/\",\n *   ],\n * };\n * const downloader = new StorageDownloader();\n * const uploader = new IpfsUploader();\n * const storage = new ThirdwebStorage({ uploader, downloader, gatewayUrls });\n * ```\n *\n * @public\n */\nexport class ThirdwebStorage<T extends UploadOptions = IpfsUploadBatchOptions> {\n  private uploader: IStorageUploader<T>;\n  private downloader: IStorageDownloader;\n  public gatewayUrls: GatewayUrls;\n\n  constructor(options?: ThirdwebStorageOptions<T>) {\n    this.uploader = options?.uploader || new IpfsUploader();\n    this.downloader = options?.downloader || new StorageDownloader();\n    this.gatewayUrls = prepareGatewayUrls(\n      parseGatewayUrls(options?.gatewayUrls),\n    );\n  }\n\n  /**\n   * Resolve any scheme on a URL to get a retrievable URL for the data\n   *\n   * @param url - The URL to resolve the scheme of\n   * @returns The URL with its scheme resolved\n   *\n   * @example\n   * ```jsx\n   * const uri = \"ipfs://example\";\n   * const url = storage.resolveScheme(uri);\n   * console.log(url);\n   * ```\n   */\n  resolveScheme(url: string): string {\n    return replaceSchemeWithGatewayUrl(url, this.gatewayUrls) as string;\n  }\n\n  /**\n   * Downloads arbitrary data from any URL scheme.\n   *\n   * @param url - The URL of the data to download\n   * @returns The response object fetched from the resolved URL\n   *\n   * @example\n   * ```jsx\n   * const uri = \"ipfs://example\";\n   * const data = await storage.download(uri);\n   * ```\n   */\n  async download(url: string): Promise<Response> {\n    return this.downloader.download(url, this.gatewayUrls);\n  }\n\n  /**\n   * Downloads JSON data from any URL scheme.\n   * Resolves any URLs with schemes to retrievable gateway URLs.\n   *\n   * @param url - The URL of the JSON data to download\n   * @returns The JSON data fetched from the resolved URL\n   *\n   * @example\n   * ```jsx\n   * const uri = \"ipfs://example\";\n   * const json = await storage.downloadJSON(uri);\n   * ```\n   */\n  async downloadJSON<TJSON = any>(url: string): Promise<TJSON> {\n    const res = await this.download(url);\n\n    // If we get a JSON object, recursively replace any schemes with gatewayUrls\n    const json = await res.json();\n    return replaceObjectSchemesWithGatewayUrls(json, this.gatewayUrls) as TJSON;\n  }\n\n  /**\n   * Upload arbitrary file or JSON data using the configured decentralized storage system.\n   * Automatically uploads any file data within JSON objects and replaces them with hashes.\n   *\n   * @param data - Arbitrary file or JSON data to upload\n   * @param options - Options to pass through to the storage uploader class\n   * @returns - The URI of the uploaded data\n   *\n   * @example\n   * ```jsx\n   * // Upload file data\n   * const file = readFileSync(\"../file.jpg\");\n   * const fileUri = await storage.upload(file);\n   *\n   * // Or upload a JSON object\n   * const json = { name: \"JSON\", image: file };\n   * const jsonUri = await storage.upload(json);\n   * ```\n   */\n  async upload(data: unknown, options?: T): Promise<string> {\n    const [uri] = await this.uploadBatch([data], options);\n    return uri;\n  }\n\n  /**\n   * Batch upload arbitrary file or JSON data using the configured decentralized storage system.\n   * Automatically uploads any file data within JSON objects and replaces them with hashes.\n   *\n   * @param data - Array of arbitrary file or JSON data to upload\n   * @param options - Options to pass through to the storage uploader class\n   * @returns - The URIs of the uploaded data\n   *\n   * @example\n   * ```jsx\n   * // Upload an array of file data\n   * const files = [\n   *  readFileSync(\"../file1.jpg\"),\n   *  readFileSync(\"../file2.jpg\"),\n   * ];\n   * const fileUris = await storage.uploadBatch(files);\n   *\n   * // Upload an array of JSON objects\n   * const objects = [\n   *  { name: \"JSON 1\", image: files[0] },\n   *  { name: \"JSON 2\", image: files[1] },\n   * ];\n   * const jsonUris = await storage.uploadBatch(objects);\n   * ```\n   */\n  async uploadBatch(data: unknown[], options?: T): Promise<string[]> {\n    data = data.filter((item) => item !== undefined);\n\n    if (!data.length) {\n      return [];\n    }\n\n    const isFileArray = data\n      .map((item) => isFileOrBuffer(item) || typeof item === \"string\")\n      .every((item) => !!item);\n\n    let uris: string[] = [];\n\n    // If data is an array of files, pass it through to upload directly\n    if (isFileArray) {\n      uris = await this.uploader.uploadBatch(\n        data as FileOrBufferOrString[],\n        options,\n      );\n    } else {\n      // Otherwise it is an array of JSON objects, so we have to prepare it first\n      const metadata = (\n        await this.uploadAndReplaceFilesWithHashes(data, options)\n      ).map((item) => {\n        if (typeof item === \"string\") {\n          return item;\n        }\n        return JSON.stringify(item);\n      });\n\n      uris = await this.uploader.uploadBatch(metadata, options);\n    }\n\n    if (options?.uploadWithGatewayUrl || this.uploader.uploadWithGatewayUrl) {\n      return uris.map((uri) => this.resolveScheme(uri));\n    } else {\n      return uris;\n    }\n  }\n\n  private async uploadAndReplaceFilesWithHashes(\n    data: unknown[],\n    options?: T,\n  ): Promise<unknown[]> {\n    let cleaned = data;\n    // Replace any gateway URLs with their hashes\n    cleaned = replaceObjectGatewayUrlsWithSchemes(\n      cleaned,\n      this.gatewayUrls,\n    ) as unknown[];\n\n    // Recurse through data and extract files to upload\n    const files = extractObjectFiles(cleaned);\n\n    if (files.length) {\n      // Upload all files that came from the object\n      const uris = await this.uploader.uploadBatch(files, options);\n\n      // Recurse through data and replace files with hashes\n      cleaned = replaceObjectFilesWithUris(cleaned, uris) as unknown[];\n    }\n\n    if (options?.uploadWithGatewayUrl || this.uploader.uploadWithGatewayUrl) {\n      // If flag is set, replace all schemes with their preferred gateway URL\n      // Ex: used for Solana, where services don't resolve schemes for you, so URLs must be usable by default\n      cleaned = replaceObjectSchemesWithGatewayUrls(\n        cleaned,\n        this.gatewayUrls,\n      ) as unknown[];\n    }\n\n    return cleaned;\n  }\n}\n"],"names":[],"mappings":"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"}